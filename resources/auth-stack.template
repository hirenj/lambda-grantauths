{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "AUTH0DOMAIN" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "Auth0 domain for authentication (i.e. just 'example' from a domain of 'example.auth0.com')"
    },
    "ENABLELOGINGOOGLEACCOUNTS" : {
      "Type": "String",
      "Default" : "",
      "Description" : "Enable data access using Google accounts"
    },
    "AUTH0APIIDENTIFIER" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "Audience / Resource server identifier to match for validating access tokens"
    }
  },
  "Resources": {
    "grants": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName" : { "Fn::Join" :  [ "-", [ { "Ref" : "AWS::StackName" }, "grants" ] ] },
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "valid_to",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "valid_to",
            "KeyType" : "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "1",
          "WriteCapacityUnits": "1"
        }
      }
    },
    "AuthLogWriterPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties" : {
        "PolicyName" : "AuthLogWriterPolicy",
        "PolicyDocument" : {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "arn:aws:logs:*:*:*"
              }
            ]
        },
        "Roles" : [ { "Ref" : "LambdaExchangetokenRole" },{ "Ref" : "LambdaDatahandlerRole" },{ "Ref" : "LambdaLoginhandlerRole" },{ "Ref" : "LambdaRdatasethandlerRole" }]
      },
      "DependsOn" : ["LambdaExchangetokenRole","LambdaLoginhandlerRole","LambdaDatahandlerRole","LambdaRdatasethandlerRole"]
    },
    "LambdaExchangetokenRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [ {"Ref" : "ReadGrants"}, {"Ref" : "WriteSession"} ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "LambdaDatahandlerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [ {"Ref" : "ReadGrants"} ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "LambdaLoginhandlerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "LambdaRdatasethandlerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [ {"Ref" : "ReadGrants"}, {"Ref" : "ReadDatasets"}, {"Ref" : "ReadSession"} ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "exchangetoken" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "ZipFile": { "Fn::Join": ["", [
            "exports.exchangetoken = function(event, context) {",
            "  context.succeed('OK');",
            "};"
          ]]}
        },
        "Description" : "exchangetoken",
        "Handler" : "index.exchangetoken",
        "Environment" : { "Variables" : {
          "AUTH0_DOMAIN" : {"Ref" : "AUTH0DOMAIN"},
          "ENABLE_LOGIN_GOOGLE_ACCOUNTS" : {"Ref" : "ENABLELOGINGOOGLEACCOUNTS"},
          "AUTH0_API_IDENTIFIER" : {"Ref" : "AUTH0APIIDENTIFIER"}

        }},
        "Role" : {"Fn::GetAtt" : ["LambdaExchangetokenRole", "Arn"] },
        "Runtime" : "nodejs8.10",
        "MemorySize" : 128,
        "Timeout" : 20
      },
      "DependsOn" : "LambdaExchangetokenRole"
    },
    "datahandler" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "ZipFile": { "Fn::Join": ["", [
            "exports.datahandler = function(event, context) {",
            "  context.succeed('OK');",
            "};"
          ]]}
        },
        "Description" : "datahandler",
        "Handler" : "index.datahandler",
        "Environment" : { "Variables" : {
          "AUTH0_DOMAIN" : {"Ref" : "AUTH0DOMAIN"},
          "ENABLE_LOGIN_GOOGLE_ACCOUNTS" : {"Ref" : "ENABLELOGINGOOGLEACCOUNTS"},
          "AUTH0_API_IDENTIFIER" : {"Ref" : "AUTH0APIIDENTIFIER"}
        }},
        "Role" : {"Fn::GetAtt" : ["LambdaDatahandlerRole", "Arn"] },
        "Runtime" : "nodejs8.10",
        "MemorySize" : 128,
        "Timeout" : 10
      },
      "DependsOn" : "LambdaDatahandlerRole"
    },
    "loginhandler" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "ZipFile": { "Fn::Join": ["", [
            "exports.loginhandler = function(event, context) {",
            "  context.succeed('OK');",
            "};"
          ]]}
        },
        "Description" : "loginhandler",
        "Handler" : "index.loginhandler",
        "Environment" : { "Variables" : {
          "AUTH0_DOMAIN" : {"Ref" : "AUTH0DOMAIN"},
          "ENABLE_LOGIN_GOOGLE_ACCOUNTS" : {"Ref" : "ENABLELOGINGOOGLEACCOUNTS"},
          "AUTH0_API_IDENTIFIER" : {"Ref" : "AUTH0APIIDENTIFIER"}
        }},
        "Role" : {"Fn::GetAtt" : ["LambdaLoginhandlerRole", "Arn"] },
        "Runtime" : "nodejs8.10",
        "MemorySize" : 128,
        "Timeout" : 10
      },
      "DependsOn" : "LambdaLoginhandlerRole"
    },
    "rdatasethandler" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "ZipFile": { "Fn::Join": ["", [
            "exports.rdatasethandler = function(event, context) {",
            "  context.succeed('OK');",
            "};"
          ]]}
        },
        "Description" : "rdatasethandler",
        "Handler" : "index.rdatasethandler",
        "Environment" : { "Variables" : {
          "AUTH0_DOMAIN" : {"Ref" : "AUTH0DOMAIN"},
          "ENABLE_LOGIN_GOOGLE_ACCOUNTS" : {"Ref" : "ENABLELOGINGOOGLEACCOUNTS"},
          "AUTH0_API_IDENTIFIER" : {"Ref" : "AUTH0APIIDENTIFIER"}
        }},
        "Role" : {"Fn::GetAtt" : ["LambdaRdatasethandlerRole", "Arn"] },
        "Runtime" : "nodejs8.10",
        "MemorySize" : 128,
        "Timeout" : 10
      },
      "DependsOn" : "LambdaRdatasethandlerRole"
    },
    "ReadGrants" : {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "ReadGrants",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "ReadGrants",
              "Effect": "Allow",
              "Action": [
                  "dynamodb:Scan",
                  "dynamodb:BatchGetItem"
              ],
              "Resource": { "Fn::Join" :  [ "", [ "arn:aws:dynamodb:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" } ,":table/", { "Ref" : "grants" } ] ]}
            }
          ]
        }
      },
      "DependsOn": "grants"
    },
    "WriteSession" : {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "WriteSession",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "WriteSession",
              "Effect": "Allow",
              "Action": [
                  "s3:PutObject"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", { "Ref" : "AWS::StackName" }, "-gator/sessions/*" ] ] }
              ]
            }
          ]
        }
      }
    },
    "ReadSession" : {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "WriteSession",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "WriteSession",
              "Effect": "Allow",
              "Action": [
                  "s3:GetObject"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", { "Ref" : "AWS::StackName" }, "-gator/sessions/*" ] ] }
              ]
            }
          ]
        }
      }
    },
    "WriteGrants" : {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "WriteGrants",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "WriteGrants",
              "Effect": "Allow",
              "Action": [
                  "dynamodb:PutItem",
                  "dynamodb:GetItem",
                  "dynamodb:Scan",
                  "dynamodb:BatchWriteItem"
              ],
              "Resource": { "Fn::Join" :  [ "", [ "arn:aws:dynamodb:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" } ,":table/", { "Ref" : "grants" } ] ]}
            }
          ]
        }
      },
      "DependsOn": "grants"
    }
  },
  "Outputs": {
    "WriteGrants" : {
      "Description" : "Arn for writing grants policy",
      "Value" : { "Ref" : "WriteGrants"}
    }
  }
}